import 'package:flutter/material.dart';
import 'package:mauripress/Mahome_SignupAnime.dart';
import 'package:mauripress/QuickElements.dart';
import 'Mahome_EnterAnime.dart';

class Dahome extends StatefulWidget {
  Dahome({Key key, this.title, @required List<AnimationController> controllers})
      : daanime = EntAnime(controllers[0]),
        signanime = SignupAnime(controllers[1]),
        super(key: key);
  final EntAnime daanime;
  final SignupAnime signanime;
  final String title;
  // Dastate createState() => Dastate(daanime, signanime);
  Dastate createState() => Dastate();
  // @override
}

class Dastate extends State<Dahome> {
  // Dastate(this.widget.daanime, this.loganime);
  // final EntAnime widget.daanime;
  // final SignupAnime loganime;
  bool cansignup = false;
  bool gonsignup = false;

  @override
  Widget build(BuildContext context) {
    var dawidth = MediaQuery.of(context).size.width;
    var daheight = MediaQuery.of(context).size.height;
    double hres(double shit) => daheight * (shit / 830.857);
    double wres(double shit) => dawidth * (shit / 411.42857);
    debugPrint("w: $dawidth , h: $daheight");
    // var ze =
    return Scaffold(
      // resizeToAvoidBottomInset: false,
      backgroundColor: Color(0xFF0F111A),
      body: AnimatedBuilder(
        animation:
            cansignup ? widget.signanime.controller : widget.daanime.controller,
        builder: (context, child) {
          return SingleChildScrollView(
            // alignment: Alignment.center,
            child: Container(
              height: daheight,
              child: Column(
                // mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  Spacer(flex: 1),
                  // SizedBox(height: widget.daanime.topmargin.value),
                  ClipRect(
                    child: Align(
                      heightFactor: widget.daanime.topmargin.value,
                      child: FadeTransition(
                        opacity: widget.daanime.opanime,
                        child: Padding(
                          padding: EdgeInsets.only(left: 40),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            mainAxisAlignment: MainAxisAlignment.start,
                            children: <Widget>[
                              Text(
                                "Bienvenue sur",
                                style: TextStyle(
                                    color: Colors.white, fontSize: 20),
                              ),
                              SizedBox(height: 5),
                              Row(
                                children: <Widget>[
                                  Text(
                                    "Mauri",
                                    style: TextStyle(
                                        color: Colors.blue, fontSize: 30),
                                  ),
                                  Text(
                                    "Pressing",
                                    style: TextStyle(
                                        color: Colors.white, fontSize: 30),
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ),
                      ),
                    ),
                  ),
                  Container(
                    height: widget.daanime
                        .capsize(hres(40.0), hres(0))
                        .value, //polka ? 40 : 0,
                  ),
                  Align(
                    alignment: Alignment.center,
                    child: Container(
                        // height: daheight * 0.7,//widget.daanime.capsize(470.0, 470.0).value,
                        width: dawidth * 0.95,
                        decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(5.0),
                            color: widget.daanime.towhite.value,
                            boxShadow: [
                              BoxShadow(
                                  color: Color.fromRGBO(0, 0, 0, 0.1),
                                  offset: Offset(0, 3),
                                  blurRadius: 5,
                                  spreadRadius: 0)
                            ]),
                        child: Column(
                          children: <Widget>[
                            Align(
                              alignment: widget.daanime.icontotop.value,
                              child: Container(
                                width: widget.daanime
                                    .getsize(dawidth * 0.85, dawidth * 0.3)
                                    .value, //dawidth * 0.85,
                                margin: EdgeInsets.only(right: 30),
                                child: Image(
                                  // width: dawidth * 0.8,
                                  image: AssetImage("assets/images/dalogo.png"),
                                ),
                              ),
                            ),
                            SizedBox(
                              height: widget.daanime.capsize(0.0, 20.0).value,
                            ),
                            ClipRect(
                              child: Align(
                                heightFactor: widget.daanime.hfact.value,
                                child: FadeTransition(
                                  opacity: widget.daanime.r_opanime,
                                  child: Column(
                                    children: <Widget>[
                                      myInput(
                                          "Email", false, dawidth, daheight),
                                      SizedBox(height: 20),
                                      myInput("Mot de passe", true, dawidth,
                                          daheight)
                                    ],
                                  ),
                                ),
                              ),
                            ),
                            // if (cansignup)
                            ClipRect(
                              child: Align(
                                heightFactor: widget.signanime.qhfact.value,
                                child: Opacity(
                                  opacity: widget.signanime.qopanime.value,
                                  child: Column(
                                    children: <Widget>[
                                      SizedBox(height: 20),
                                      myInput("Nom Complet", false, dawidth,
                                          daheight),
                                      SizedBox(height: 20),
                                      myInput(
                                          "Adresse", false, dawidth, daheight),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                            SizedBox(
                              height: widget.daanime
                                  .capsize(hres(40), hres(50))
                                  .value,
                            ),
                            ButtonTheme(
                              minWidth: wres(280),
                              child: RaisedButton(
                                  onPressed: () => {
                                        widget.daanime.controller
                                            .forward()
                                            .whenComplete(() => {
                                                  setState(() {
                                                    cansignup = true;
                                                  })
                                                }),
                                      },
                                  color: widget.signanime.butcol.value,
                                  // highlightColor: Colors.white,
                                  splashColor: Colors.white,
                                  padding: EdgeInsets.only(top: 14, bottom: 14),
                                  // shape: ,
                                  child: Text(
                                    gonsignup ? "S'inscrire" : "Se connecter",
                                    style: TextStyle(
                                        color: Colors.white, fontSize: 16),
                                  )),
                            ),
                            SizedBox(
                              height: 10,
                            ),
                            ButtonTheme(
                              minWidth: 280,
                              child: RaisedButton(
                                onPressed: () => {
                                  if (!cansignup)
                                    widget.daanime.controller
                                        .forward()
                                        .whenComplete(() => {
                                              setState(() {
                                                cansignup = true;
                                              })
                                            }),
                                  if (!gonsignup)
                                    widget.signanime.controller
                                        .forward()
                                        .whenComplete(() => {
                                              setState(() {
                                                gonsignup = true;
                                              })
                                            })
                                  else
                                    widget.signanime.controller
                                        .reverse()
                                        .whenComplete(() => {
                                              setState(() {
                                                gonsignup = false;
                                              })
                                            })
                                },
                                color: Color.fromRGBO(41, 45, 62, 1),
                                padding: EdgeInsets.only(top: 14, bottom: 14),
                                // shape: ,
                                child: Text(
                                  "${gonsignup ? 'J\'ai un' : 'Je n\'ai pas de'} compte !",
                                  style: TextStyle(
                                      color: Colors.white, fontSize: 16),
                                ),
                              ),
                            ),
                          ],
                        )),
                  ),
                  Spacer(flex: 1)
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}
